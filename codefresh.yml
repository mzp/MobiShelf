version: '1.0'
steps:
  BuildingJsImage:
    title: Building Docker Image for frontend
    type: build
    image_name: mzp/fumifumi-js
    working_directory: config/docker
    dockerfile: Dockerfile.js
  BuldingAssets:
    title: Building Frontend assets
    image: '${{BuildingJsImage}}'
    commands:
      - bash /codefresh/volume/cf-generated/build
    create_file:
      path: /codefresh/volume/cf-generated
      name: build
      content: |-
        set -e
        source ~/.profile
        git clean -fdx
        npm link bs-platform
        yarn install
        yarn build:js
        yarn lint:js
        yarn lint:css
        ./front/script/build
  BuildingDockerImage:
    title: Building Docker Image
    type: build
    image_name: mzpi/fumifumi
    working_directory: .
    dockerfile: config/docker/Dockerfile.app
  RunningUnitTests:
    title: Running Unit Tests
    type: composition
    composition:
      version: '2'
      services:
        db:
          image: 'mysql:5.7'
          environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    composition_candidates:
      fumifumi:
        image: '${{BuildingDockerImage}}'
        entrypoint: bash -i /codefresh/volume/cf-generated/unit_test_script
        volumes:
          - '${{CF_VOLUME}}:/codefresh/volume'
        depends_on:
          - db
    add_flow_volume_to_composition: true
    create_file:
      path: /codefresh/volume/cf-generated
      name: unit_test_script
      content: |-
        set -e
        cd /codefresh/volume/fumifumi
        bundle install --with test
        sleep 20
        RAILS_ENV=test bundle exec rake db:setup
        bundle exec haml-lint
        bundle exec rubocop
        bundle exec rspec
    on_success:
      metadata:
        set:
          - '${{BuildingDockerImage.imageId}}':
              - CF_QUALITY: true
    on_fail:
      metadata:
        set:
          - '${{BuildingDockerImage.imageId}}':
              - CF_QUALITY: false
  DeployToDockerHub:
    type: push
    description: Push to docker hub
    candidate: ${{BuildingDockerImage}}
    tag: latest
    when:
      branch:
        only:
          - master
